/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Install.java
 *
 * Created on May 29, 2009, 9:52:26 AM
 */

package gui;

import interact.DataInteraction;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import interact.Configs;

/**
 *
 * @author Bach Ngoc  Toan
 */
public class Install extends javax.swing.JFrame {

    /** Creates new form Install */
    public Install(boolean bExamples) {
        initComponents();
        InstallOperation io = new InstallOperation(this, bExamples);
        io.start();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pgrInstall = new javax.swing.JProgressBar();
        lblStatus = new javax.swing.JLabel();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblStatus.setText("Installing....");

        btnCancel.setText("Cancel");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(layout.createSequentialGroup()
                            .add(lblStatus)
                            .addContainerGap(372, Short.MAX_VALUE))
                        .add(layout.createSequentialGroup()
                            .add(pgrInstall, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                            .addContainerGap()))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(btnCancel)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblStatus)
                .add(5, 5, 5)
                .add(pgrInstall, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnCancel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new Install().setVisible(true);
    }
    });
    }*/
public void setStatus(String sStatus, int percent) {
    lblStatus.setText((sStatus));
    pgrInstall.setValue(percent);
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JProgressBar pgrInstall;
    // End of variables declaration//GEN-END:variables

}
class InstallOperation extends Thread {

    private Install frmParent;
    private boolean bExamples;

    public InstallOperation(Install frmParent, boolean bExamples) {
        this.frmParent = frmParent;
    }

    @Override
    public void run() {
        saveConfig();
        frmParent.setStatus("Saving Configs", 0);

        install("install.txt", "Installing Database...");
        install("examples.txt", "Installing Examples...");
        if(bExamples) {

        }
        JOptionPane.showMessageDialog(null, "Installation is successful.");
        System.exit(0);
    }

    private void saveConfig() {
         Configs.setProperty(Configs.CONFIG_SERVERNAME,DataInteraction.getServername());
        Configs.setProperty(Configs.CONFIG_PORTNUMBER, DataInteraction.getPort());
        Configs.setProperty(Configs.CONFIG_SERVERUSERNAME, DataInteraction.getUsername());
        Configs.setProperty(Configs.CONFIG_SERVERPASSWORD,DataInteraction.getPassword());
        Configs.setProperty(Configs.CONFIG_DATABASENAME,DataInteraction.getDatabaseName());

        Configs.saveConfiguration();
    }
 
    private void install(String sFileName, String sStatus) {

        FileReader fr = null;
        BufferedReader br = null;
        ArrayList<String> sQueries = new ArrayList<String>();

        try {
            fr = new FileReader(sFileName);
            br = new BufferedReader(fr);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Cannot read setup data files");
            System.exit(0);
        }

        try {
            String s = br.readLine();
            while(s != null) {
                sQueries.add(s);
                s = br.readLine();
            }
        } catch(Exception ex) {
        }

        double iDid = 0;
        for(String s : sQueries) {
            DataInteraction.exec(s);
            ++iDid;
            double dPercent = (iDid / sQueries.size()) * 100;
            frmParent.setStatus(sStatus, (int)dPercent);
        }

        try {
            br.close();
            fr.close();
        } catch (Exception ex) {

        }
    }
}
