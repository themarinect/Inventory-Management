/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmUser.java
 *
 * Created on May 20, 2009, 8:15:54 AM
 */

package gui;

import entity.Role;
import entity.Admin;
import interact.DataInteraction;
import interact.GUIInteraction;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author KHOIN
 */
public class frmAdmin extends javax.swing.JInternalFrame {

    /** Creates new form frmUser */
    public frmAdmin() {
        initComponents();
        /*txtusername.setText(cboRoleID.getSelectedItem().toString());*/
        GUIInteraction.readToCombo("select * from Roles", cboRoles,"RoleName");
        refresh();
        refreshUser();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtroleid = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtrolename = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRoles = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtadminid = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtusername = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        btnEditUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        txtpassword = new javax.swing.JPasswordField();
        cboRoles = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblUser = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Administrators");
        setPreferredSize(new java.awt.Dimension(810, 427));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("From Infomation"));

        jLabel1.setText("RoleID");

        txtroleid.setEditable(false);

        jLabel2.setText("RoleName");

        txtrolename.setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(51, 51, 51)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(txtrolename)
                    .add(txtroleid, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
                .addContainerGap(498, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtroleid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtrolename, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Information"));

        tblRoles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblRoles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRolesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRoles);

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Role", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Information"));

        jLabel3.setText("AdminID");

        jLabel5.setText("UserName");

        jLabel6.setText("PassWord");

        jLabel7.setText("Phone");

        jLabel8.setText("EMail");

        jLabel9.setText("RoleID");

        btnAddUser.setText("Add");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnEditUser.setText("Edit");
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setText("Delete");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        cboRoles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Choose Roles---" }));

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jLabel4))
                            .add(jLabel3)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                            .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtpassword, 0, 0, Short.MAX_VALUE)
                            .add(txtusername, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                            .add(txtadminid, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)))
                    .add(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(btnAddUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(btnEditUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(10, 10, 10)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel7))
                        .add(10, 10, 10)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(cboRoles, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txtphone)
                            .add(txtmail, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel5Layout.createSequentialGroup()
                        .add(btnDeleteUser, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(304, 304, 304))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtadminid, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtmail, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(txtusername, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(txtphone, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtpassword, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cboRoles, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnRefresh)
                    .add(btnDeleteUser)
                    .add(btnEditUser)
                    .add(btnAddUser))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Information"));

        tblUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUserMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblUser);

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("User", jPanel2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void refresh(){
        try {
            GUIInteraction.readToTable("select * from Roles", tblRoles);
            
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void tblRolesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRolesMouseClicked
        int i = tblRoles.getSelectedRow();
       txtroleid.setText(String.valueOf(tblRoles.getValueAt(i, 0)));
       txtrolename.setText(String.valueOf(tblRoles.getValueAt(i, 1)));
    }//GEN-LAST:event_tblRolesMouseClicked

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
       
            if (!interact.CheckForm.isEmpty(txtadminid.getText())) {
                JOptionPane.showMessageDialog(this, "Admin ID mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtadminid.requestFocus();
                return;
            }
            if (!interact.CheckForm.overLengthID(txtadminid.getText())) {
                JOptionPane.showMessageDialog(this, "AdminID mustn't be than 5 ", "Error", JOptionPane.ERROR_MESSAGE);
                txtadminid.requestFocus();
                return;
            }
            if (!interact.GUIInteraction.checkDuplicateID(txtadminid.getText(), "select * from Administrators", "AdminID")) {
                JOptionPane.showMessageDialog(this, "Admin ID is duplicated ", "Error", JOptionPane.ERROR_MESSAGE);
                txtadminid.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtusername.getText())) {
                JOptionPane.showMessageDialog(this, "Username mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtusername.requestFocus();
                return;
            }
            if (!interact.GUIInteraction.checkDuplicateID(txtusername.getText(), "select * from Administrators", "Username")) {
                JOptionPane.showMessageDialog(this, "Username is duplicated", "Error", JOptionPane.ERROR_MESSAGE);
                txtusername.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtpassword.getText())) {
                JOptionPane.showMessageDialog(this, "Password mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtpassword.requestFocus();
                return;
            }
            if (!interact.CheckForm.isWhiteSpace(txtpassword.getText())) {
                JOptionPane.showMessageDialog(this, "Password mustn't be whitespace ", "Error", JOptionPane.ERROR_MESSAGE);
                txtpassword.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.isNumberic(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone must be numberic ", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.checkPhoneNumber(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone is not invalid", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtmail.requestFocus();
                return;
            }
            if (!interact.CheckForm.checkEmail(txtmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email is not invalid ", "Error", JOptionPane.ERROR_MESSAGE);
                txtmail.requestFocus();
                return;
            }
            if(cboRoles.getSelectedIndex()==0)
            {
                JOptionPane.showMessageDialog(this,"You must choosing a roles");
                return;
            }
             DataInteraction data= new DataInteraction();
            String id=(String)cboRoles.getSelectedItem();
            String nameAdmin=data.getLines("Roles","RoleName", id, "RoleID");
           
            entity.Admin ad = new entity.Admin(txtadminid.getText(), txtusername.getText(), txtpassword.getText(), txtphone.getText(), txtmail.getText(), nameAdmin, true);
          
            interact.Administrators.insertUser(ad);
            refreshUser();
            ResetFormAdmin();
       
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void tblUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUserMouseClicked
        int i = tblUser.getSelectedRow();
        txtadminid.setText(String.valueOf(tblUser.getValueAt(i, 0)));
        txtusername.setText(String.valueOf(tblUser.getValueAt(i, 1)));
        txtpassword.setText(String.valueOf(tblUser.getValueAt(i, 2)));
        txtphone.setText(String.valueOf(tblUser.getValueAt(i, 3)));
        txtmail.setText(String.valueOf(tblUser.getValueAt(i, 4)));
        cboRoles.setSelectedItem(tblUser.getValueAt(i,5));
    }//GEN-LAST:event_tblUserMouseClicked

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
       refreshUser();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
       int i=JOptionPane.showConfirmDialog(this,"Do you want to delete all information of this sales.?");
        if(i==JOptionPane.YES_OPTION)
        {
        String strRole = txtadminid.getText();
        if(!interact.CheckForm.isEmpty(txtadminid.getText())){
             JOptionPane.showMessageDialog(this,"You must choosing a AdminID","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        interact.Administrators.deleteUser(strRole);
        refreshUser();
        ResetFormAdmin();
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
        try {
            if (!interact.CheckForm.isEmpty(txtadminid.getText())) {
                JOptionPane.showMessageDialog(this, "AdminID mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtadminid.requestFocus();
                return;
            }
            if (!interact.CheckForm.overLengthID(txtadminid.getText())) {
                JOptionPane.showMessageDialog(this, "ADminID mustn't be than 5 ", "Error", JOptionPane.ERROR_MESSAGE);
                txtadminid.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtusername.getText())) {
                JOptionPane.showMessageDialog(this, "Username mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtusername.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtpassword.getText())) {
                JOptionPane.showMessageDialog(this, "Password mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtpassword.requestFocus();
                return;
            }
            if (!interact.CheckForm.isWhiteSpace(txtpassword.getText())) {
                JOptionPane.showMessageDialog(this, "Password mustn't be whitespace ", "Error", JOptionPane.ERROR_MESSAGE);
                txtpassword.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.isNumberic(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone must be numberic ", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.checkPhoneNumber(txtphone.getText())) {
                JOptionPane.showMessageDialog(this, "Phone is not invalid", "Error", JOptionPane.ERROR_MESSAGE);
                txtphone.requestFocus();
                return;
            }
            if (!interact.CheckForm.isEmpty(txtmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email mustn't Empty ", "Error", JOptionPane.ERROR_MESSAGE);
                txtmail.requestFocus();
                return;
            }
            if (!interact.CheckForm.checkEmail(txtmail.getText())) {
                JOptionPane.showMessageDialog(this, "Email is not invalid ", "Error", JOptionPane.ERROR_MESSAGE);
                txtmail.requestFocus();
                return;
            }
            String Code = null;
            String name = String.valueOf(cboRoles.getSelectedItem());
            ResultSet rs = DataInteraction.queryResultSet("select RoleID from Roles where RoleName='" + name + "'");
            while (rs.next()) {
                Code = rs.getString("RoleID");
            }
            entity.Admin ad = new Admin(txtadminid.getText(), txtusername.getText(), txtpassword.getText(), txtphone.getText(), txtmail.getText(), Code, true);
            interact.Administrators.updateUser(ad);
            refreshUser();
            ResetFormAdmin();
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEditUserActionPerformed
    public void refreshUser(){
         String sql = "select AdminID,Username,Password,Phone,Email,RoleName,Status from Administrators,Roles where Administrators.RoleID = Roles.RoleID";
         try {
            GUIInteraction.readToTable(sql, tblUser);
        } catch (SQLException ex) {
            Logger.getLogger(frmAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void ResetFormAdmin(){
        txtadminid.setText("");
        txtusername.setText("");
        txtpassword.setText("");
        txtphone.setText("");
        txtmail.setText("");
        txtroleid.setText("");
        cboRoles.setSelectedIndex(0);
    }
    public void ResetFromRole(){
        txtrolename.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEditUser;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox cboRoles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblRoles;
    private javax.swing.JTable tblUser;
    private javax.swing.JTextField txtadminid;
    private javax.swing.JTextField txtmail;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JTextField txtphone;
    private javax.swing.JTextField txtroleid;
    private javax.swing.JTextField txtrolename;
    private javax.swing.JTextField txtusername;
    // End of variables declaration//GEN-END:variables

}
