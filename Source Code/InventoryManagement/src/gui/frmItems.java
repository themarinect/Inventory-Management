/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmItems.java
 *
 * Created on May 18, 2009, 9:42:21 PM
 */

package gui;

import entity.Category;
import entity.Item;
import interact.DataInteraction;
import interact.GUIInteraction;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Bach Ngoc  Toan
 */
public class frmItems extends javax.swing.JInternalFrame {

    /** Creates new form frmItems */
    public frmItems() {
        /*setRootPaneCheckingEnabled(true);
        javax.swing.plaf.InternalFrameUI gui = this.getUI();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) gui).setNorthPane(null);*/
        initComponents();
        refresh();
        refreshItem();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabmain = new javax.swing.JTabbedPane();
        tabCategory = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtCategoryID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCategoryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnAddCategory = new javax.swing.JButton();
        btnEditCategory = new javax.swing.JButton();
        deleteCategory = new javax.swing.JButton();
        btnSearchCategory = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCategories = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        tblCategories.getTableHeader().setReorderingAllowed(false);
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tablItem = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblItemDetails = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        tblItemDetails.getTableHeader().setReorderingAllowed(false);
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtItemQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtItemManufacture = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboItemUnit = new javax.swing.JComboBox();
        txtItemName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboItemCategory = new javax.swing.JComboBox();
        txtItemPrice = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaItemDescipt = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnAddItem = new javax.swing.JButton();
        btnDeleteItem = new javax.swing.JButton();
        btnEditItem = new javax.swing.JButton();
        btnItemRefresh = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Items/Categories");
        setPreferredSize(new java.awt.Dimension(810, 427));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 244, Short.MAX_VALUE)
        );

        txtCategoryID.setEditable(false);

        jLabel1.setText("Category ID:");

        jLabel2.setText("Category Name:");

        btnAddCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.gif"))); // NOI18N
        btnAddCategory.setText("Add");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });

        btnEditCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/admin_member_mailier.gif"))); // NOI18N
        btnEditCategory.setText("Edit");
        btnEditCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCategoryActionPerformed(evt);
            }
        });

        deleteCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Symbol-Delete.png"))); // NOI18N
        deleteCategory.setText("Delete");
        deleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCategoryActionPerformed(evt);
            }
        });

        btnSearchCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.gif"))); // NOI18N
        btnSearchCategory.setText("Search");
        btnSearchCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCategoryActionPerformed(evt);
            }
        });

        tblCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCategories);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Categories Management");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(257, 257, 257)
                .add(jLabel3)
                .addContainerGap(279, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel3)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout tabCategoryLayout = new org.jdesktop.layout.GroupLayout(tabCategory);
        tabCategory.setLayout(tabCategoryLayout);
        tabCategoryLayout.setHorizontalGroup(
            tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabCategoryLayout.createSequentialGroup()
                .add(139, 139, 139)
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, tabCategoryLayout.createSequentialGroup()
                        .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel2)
                            .add(jLabel1))
                        .add(68, 68, 68))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, tabCategoryLayout.createSequentialGroup()
                        .add(btnAddCategory)
                        .add(21, 21, 21)))
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(tabCategoryLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnEditCategory)
                        .add(18, 18, 18)
                        .add(deleteCategory)
                        .add(29, 29, 29)
                        .add(btnSearchCategory))
                    .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtCategoryID)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, txtCategoryName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)))
                .add(832, 832, 832))
            .add(tabCategoryLayout.createSequentialGroup()
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(tabCategoryLayout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 774, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(176, 176, 176)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(446, 446, 446))
        );
        tabCategoryLayout.setVerticalGroup(
            tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabCategoryLayout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(16, 16, 16)
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtCategoryID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .add(27, 27, 27)
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtCategoryName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .add(18, 18, 18)
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnSearchCategory)
                    .add(deleteCategory)
                    .add(btnEditCategory)
                    .add(btnAddCategory))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(tabCategoryLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, tabCategoryLayout.createSequentialGroup()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(34, 34, 34))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, tabCategoryLayout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 244, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        tabmain.addTab("Catgories", tabCategory);

        tablItem.setDoubleBuffered(false);

        tblItemDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblItemDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemDetailsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblItemDetails);

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24));
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Items Management");
        jPanel3.add(jLabel13);
        jLabel13.setBounds(230, 10, 207, 29);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Information"));

        jLabel7.setText("Quantity:");

        jLabel9.setText("Manufacture:");

        jLabel6.setText("Unit:");

        cboItemUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---Unit---", "Kg", "Pair", "Couple", " " }));

        jLabel5.setText("Name:");

        jLabel4.setText("ID:");

        cboItemCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboItemCategoryItemStateChanged(evt);
            }
        });

        txaItemDescipt.setColumns(20);
        txaItemDescipt.setRows(5);
        jScrollPane3.setViewportView(txaItemDescipt);

        jLabel11.setText("Descript:");

        jLabel10.setText("Category:");

        jLabel8.setText("Price:");

        btnAddItem.setText("Add");
        btnAddItem.setPreferredSize(new java.awt.Dimension(100, 23));
        btnAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddItemActionPerformed(evt);
            }
        });

        btnDeleteItem.setText("Delete");
        btnDeleteItem.setPreferredSize(new java.awt.Dimension(100, 23));
        btnDeleteItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteItemActionPerformed(evt);
            }
        });

        btnEditItem.setText("Edit");
        btnEditItem.setPreferredSize(new java.awt.Dimension(100, 23));
        btnEditItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditItemActionPerformed(evt);
            }
        });

        btnItemRefresh.setText("Refresh");
        btnItemRefresh.setPreferredSize(new java.awt.Dimension(100, 23));
        btnItemRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemRefreshActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel5)
                    .add(jLabel4)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtItemName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, txtItemID, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, btnAddItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, cboItemUnit, 0, 100, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel8)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnEditItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel11))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(10, 10, 10)
                            .add(btnItemRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(18, 18, 18)
                            .add(btnDeleteItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(293, 293, 293))
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(cboItemCategory, 0, 104, Short.MAX_VALUE)
                                .add(txtItemPrice, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
                            .add(89, 89, 89)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(jLabel9)
                                .add(jLabel7))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(txtItemQuantity)
                                .add(txtItemManufacture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 141, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(118, 118, 118)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 183, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 57, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtItemID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jPanel4Layout.createSequentialGroup()
                                        .add(5, 5, 5)
                                        .add(jLabel4)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(txtItemName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel5)))
                                    .add(jLabel9)
                                    .add(jPanel4Layout.createSequentialGroup()
                                        .add(txtItemManufacture, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(txtItemQuantity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel7))))
                                .add(18, 18, 18)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel6)
                                    .add(cboItemUnit, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                        .add(txtItemPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel8))
                                    .add(jPanel4Layout.createSequentialGroup()
                                        .add(25, 25, 25)
                                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(cboItemCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel10))))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 27, Short.MAX_VALUE)
                                .add(jLabel11)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .add(25, 25, 25)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btnAddItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnEditItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnItemRefresh, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnDeleteItem, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout tablItemLayout = new org.jdesktop.layout.GroupLayout(tablItem);
        tablItem.setLayout(tablItemLayout);
        tablItemLayout.setHorizontalGroup(
            tablItemLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE)
            .add(tablItemLayout.createSequentialGroup()
                .addContainerGap()
                .add(tablItemLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4, 0, 779, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablItemLayout.setVerticalGroup(
            tablItemLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tablItemLayout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabmain.addTab("Items", tablItem);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, tabmain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(tabmain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed

       if(!interact.CheckForm.isWhiteSpace(txtCategoryName.getText()))
       {
            JOptionPane.showMessageDialog(this,"Name is not blank","Required",JOptionPane.ERROR_MESSAGE);
            txtCategoryName.requestFocus();
            return;
       }
       if(!interact.GUIInteraction.checkDuplicateID(txtCategoryName.getText().trim(),"select * from Categories","CategoryName"))
        {
            JOptionPane.showMessageDialog(this,"Category name is duplicated","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
       entity.Category ct=new Category();
       ct.setCategoryName(txtCategoryName.getText());
       interact.Categories.insertCategory(ct);
       refresh();
       resetForm();

    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void tblCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriesMouseClicked
        int i=tblCategories.getSelectedRow();
        txtCategoryID.setText(String.valueOf(tblCategories.getValueAt(i, 0)));
        txtCategoryName.setText(String.valueOf(tblCategories.getValueAt(i, 1)));
    }//GEN-LAST:event_tblCategoriesMouseClicked

    private void btnEditCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCategoryActionPerformed
        if(!interact.CheckForm.isWhiteSpace(txtCategoryName.getText()))
       {
            JOptionPane.showMessageDialog(this,"Name is not blank","Required",JOptionPane.ERROR_MESSAGE);
            txtCategoryName.requestFocus();
            return;
       }
       entity.Category ct=new Category(Integer.valueOf(txtCategoryID.getText()),txtCategoryName.getText());
       interact.Categories.editCategory(ct);
       refresh();
       resetForm();
    }//GEN-LAST:event_btnEditCategoryActionPerformed

    private void deleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCategoryActionPerformed
        int i=JOptionPane.showConfirmDialog(this,"Do you want to delete all items of this category.?");
        if(i==JOptionPane.YES_OPTION)
        {
        int row=tblCategories.getSelectedRow();

        if(row<0)
        {
            JOptionPane.showMessageDialog(this,"You must choosing a category.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        int id=Integer.valueOf(tblCategories.getValueAt(row,0).toString());
        interact.Categories.deleteCategory(id);
        refresh();
        resetForm();

        }
    }//GEN-LAST:event_deleteCategoryActionPerformed

    private void btnAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddItemActionPerformed
        if(!interact.CheckForm.overLengthID(txtItemID.getText()))
        {
            JOptionPane.showMessageDialog(this,"ID is invalid","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.GUIInteraction.checkDuplicateID(txtItemID.getText().trim(),"select * from Items","ItemID"))
        {
            JOptionPane.showMessageDialog(this,"ID is duplicated","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.CheckForm.isEmpty(txtItemName.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item name is not blank.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(cboItemUnit.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(this,"You must choosing unit","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.CheckForm.isNumberic(txtItemQuantity.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item quantity is invalid","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.CheckForm.isNumberic(txtItemPrice.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item price is invalid","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.CheckForm.isEmpty(txtItemManufacture.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item manufacture is not blank","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        if(!interact.CheckForm.isEmpty(txaItemDescipt.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item descript is not blank.","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
int code=DataInteraction.getCode("Categories","CategoryName",cboItemCategory.getSelectedItem().toString(),"CategoryID");
        entity.Item it=new Item(
                txtItemID.getText(),
                txtItemName.getText(),
                String.valueOf(cboItemUnit.getSelectedItem()),
                Integer.valueOf(txtItemQuantity.getText()),
                Float.valueOf(txtItemPrice.getText()),
                entity.DateUtils.now("MM/dd/yy"),
                txtItemManufacture.getText(),
                txaItemDescipt.getText(),
                code,true,0);
        interact.Items.insertItem(it);
        refreshItem();
        resetItemForm();
    }//GEN-LAST:event_btnAddItemActionPerformed

    private void tblItemDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemDetailsMouseClicked
            int i=tblItemDetails.getSelectedRow();
    txtItemID.setText(String.valueOf(tblItemDetails.getValueAt(i,0)));
    txtItemName.setText(String.valueOf(tblItemDetails.getValueAt(i,1)));
    cboItemUnit.setSelectedItem(tblItemDetails.getValueAt(i, 2));
    txtItemQuantity.setText(String.valueOf(tblItemDetails.getValueAt(i,3)));
    txtItemPrice.setText(String.valueOf(tblItemDetails.getValueAt(i,4)));
    txtItemManufacture.setText(String.valueOf(tblItemDetails.getValueAt(i,6)));
    txaItemDescipt.setText(String.valueOf(tblItemDetails.getValueAt(i,7)));
    cboItemCategory.setSelectedItem(tblItemDetails.getValueAt(i,8));
    }//GEN-LAST:event_tblItemDetailsMouseClicked

    private void btnEditItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditItemActionPerformed
        if(!interact.CheckForm.overLengthID(txtItemID.getText()))
        {
            JOptionPane.showMessageDialog(this,"ID is invalid");
            return;
        }
        if(!interact.CheckForm.isEmpty(txtItemName.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item name is not blank.");
            return;
        }
        if(cboItemUnit.getSelectedIndex()==0)
        {
            JOptionPane.showMessageDialog(this,"You must choosing unit");
            return;
        }
        if(!interact.CheckForm.isNumberic(txtItemQuantity.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item quantity is invalid");
            return;
        }
        if(!interact.CheckForm.isNumberic(txtItemPrice.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item price is invalid");
            return;
        }
        if(!interact.CheckForm.isEmpty(txtItemManufacture.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item manufacture is not blank");
            return;
        }
        if(!interact.CheckForm.isEmpty(txaItemDescipt.getText()))
        {
            JOptionPane.showMessageDialog(this,"Item descript is not blank.");
            return;
        }
        int code=DataInteraction.getCode("Categories","CategoryName",cboItemCategory.getSelectedItem().toString(),"CategoryID");
        entity.Item it=new Item(
                txtItemID.getText(),
                txtItemName.getText(),
                String.valueOf(cboItemUnit.getSelectedItem()),
                Integer.valueOf(txtItemQuantity.getText()),
                Float.valueOf(txtItemPrice.getText()),
                entity.DateUtils.now("MM/dd/yy"),
                txtItemManufacture.getText(),
                txaItemDescipt.getText(),
                code,true,0);
        interact.Items.updateItem(it);
        refreshItem();
        resetItemForm();
    }//GEN-LAST:event_btnEditItemActionPerformed

    private void btnItemRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemRefreshActionPerformed
        refreshItem();
    }//GEN-LAST:event_btnItemRefreshActionPerformed

    private void btnDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteItemActionPerformed
        int i=JOptionPane.showConfirmDialog(this,"Do you want to delete all information of this item.?");
        if(i==JOptionPane.YES_OPTION)
        {
        String strID=txtItemID.getText();
        if(!interact.CheckForm.isEmpty(txtItemID.getText()))
        {
            JOptionPane.showMessageDialog(this,"You must choosing a item","Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        interact.Items.deleteItem(strID);
        refreshItem();
        resetItemForm();
        }
    }//GEN-LAST:event_btnDeleteItemActionPerformed

    private void cboItemCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboItemCategoryItemStateChanged
       String cateName=cboItemCategory.getSelectedItem().toString();
        int cateid = 0;
        try {

            ResultSet rs = DataInteraction.queryResultSet("select CategoryID from Categories where CategoryName='" + cateName+"'");

            while(rs.next())
           cateid= rs.getInt("CategoryID");
        } catch (SQLException ex) {
            Logger.getLogger(frmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
        String sql="select * from Items where CategoryID="+cateid;
        try {
            interact.GUIInteraction.readToTable(sql,tblItemDetails);
        } catch (SQLException ex) {
            Logger.getLogger(frmCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboItemCategoryItemStateChanged

    private void btnSearchCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCategoryActionPerformed
       String cateName=txtCategoryName.getText().trim();
        try {
            GUIInteraction.readToTable("select * from Categories where CategoryName like N'%" + cateName + "%'", tblCategories);
        } catch (SQLException ex) {
            Logger.getLogger(frmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchCategoryActionPerformed
private void refresh()
{
        try {
            interact.GUIInteraction.readToTable("select * from Categories", tblCategories);
            interact.GUIInteraction.readToCombo("select * from Categories",cboItemCategory,"CategoryName");
        } catch (SQLException ex) {
            Logger.getLogger(frmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
}
public void refreshItem()
{
    String sql="SELECT ItemID,ItemName,Unit,QuantityAvailable,Price,DateImport,Manufacture,Descript,CategoryName,Status,Sold FROM Items,Categories where Categories.CategoryID=Items.CategoryID";
        try {
            interact.GUIInteraction.readToTable(sql, tblItemDetails);
        } catch (SQLException ex) {
            Logger.getLogger(frmItems.class.getName()).log(Level.SEVERE, null, ex);
        }
}
public void resetForm()
{
    txtCategoryName.setText("");
}
public void resetItemForm()
{
    txtItemID.setText("");
    txtItemName.setText("");
    cboItemUnit.setSelectedIndex(0);
    txtItemQuantity.setText("");
    txtItemPrice.setText("");
    txtItemManufacture.setText("");
    txaItemDescipt.setText("");

}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnDeleteItem;
    private javax.swing.JButton btnEditCategory;
    private javax.swing.JButton btnEditItem;
    private javax.swing.JButton btnItemRefresh;
    private javax.swing.JButton btnSearchCategory;
    private javax.swing.JComboBox cboItemCategory;
    private javax.swing.JComboBox cboItemUnit;
    private javax.swing.JButton deleteCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel tabCategory;
    private javax.swing.JPanel tablItem;
    private javax.swing.JTabbedPane tabmain;
    private javax.swing.JTable tblCategories;
    private javax.swing.JTable tblItemDetails;
    private javax.swing.JTextArea txaItemDescipt;
    private javax.swing.JTextField txtCategoryID;
    private javax.swing.JTextField txtCategoryName;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemManufacture;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtItemPrice;
    private javax.swing.JTextField txtItemQuantity;
    // End of variables declaration//GEN-END:variables

}
