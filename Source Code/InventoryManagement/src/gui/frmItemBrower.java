/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmItemBrower.java
 *
 * Created on May 25, 2009, 11:17:40 PM
 */

package gui;

import interact.DataInteraction;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Bach Ngoc  Toan
 */
public class frmItemBrower extends javax.swing.JFrame {
   static frmProduceBill code;

    /** Creates new form frmItemBrower */
    public frmItemBrower() {
        initComponents();
        refresh();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtItemName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtItemID = new javax.swing.JTextField();
        btnRefresh = new javax.swing.JButton();
        txtPrice = new javax.swing.JTextField();
        cboCategory = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblItems = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        tblItems.getTableHeader().setReorderingAllowed(false);
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnSelect = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Items");

        txtItemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemNameKeyReleased(evt);
            }
        });

        jLabel3.setText("Item Name:");

        jLabel2.setText("Item ID:");

        txtItemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtItemIDKeyReleased(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPriceKeyReleased(evt);
            }
        });

        cboCategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All" }));
        cboCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboCategoryItemStateChanged(evt);
            }
        });

        tblItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblItems);

        jLabel1.setText("Price:");

        jLabel4.setText("Category");

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(btnSelect))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(layout.createSequentialGroup()
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel3)
                                .add(jLabel2))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(layout.createSequentialGroup()
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(txtItemID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(layout.createSequentialGroup()
                                    .add(12, 12, 12)
                                    .add(txtItemName)))
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel1)
                                .add(jLabel4))
                            .add(32, 32, 32)
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(cboCategory, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(txtPrice, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                        .add(layout.createSequentialGroup()
                            .add(38, 38, 38)
                            .add(btnRefresh))
                        .add(jScrollPane1, 0, 0, Short.MAX_VALUE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(txtItemID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(txtPrice, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(txtItemName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cboCategory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4))
                .add(18, 18, 18)
                .add(btnRefresh)
                .add(18, 18, 18)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 187, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnSelect)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtItemNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemNameKeyReleased
        String str=txtItemName.getText();
        String sql="";
        if(str.equals("")) {
            sql="select * from V_Items";
        } else{
            sql="select * from V_Items where ItemName like '%"+str+"%'";
        }
        try {
            interact.GUIInteraction.readToTable(sql,tblItems);
        } catch (SQLException ex) {
            Logger.getLogger(frmCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_txtItemNameKeyReleased

    private void txtItemIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtItemIDKeyReleased
        String str=txtItemID.getText();
        String sql="";
        if(str.equals("")) {
            sql="select * from V_Items";
        } else{
            sql="select * from V_Items where ItemID like '%"+str+"%'";
        }
        try {
            interact.GUIInteraction.readToTable(sql,tblItems);
        } catch (SQLException ex) {
            Logger.getLogger(frmCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_txtItemIDKeyReleased

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refresh();
}//GEN-LAST:event_btnRefreshActionPerformed

    private void txtPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyReleased
        String str=txtPrice.getText();
        String sql="";
        if(str.equals("")) {
            sql="select * from V_Items";
        } else{
            sql="select * from Items where Price="+Float.valueOf(str);
        }
        try {
            interact.GUIInteraction.readToTable(sql,tblItems);
        } catch (SQLException ex) {
            Logger.getLogger(frmCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_txtPriceKeyReleased

    private void cboCategoryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboCategoryItemStateChanged
        String cateName=cboCategory.getSelectedItem().toString();
        try {
            ResultSet rs = DataInteraction.queryResultSet("select CategoryID from Categories where CategoryName='"+cateName+"'");
               int cateid=1;
            while(rs.next())
                cateid= rs.getInt("CategoryID");

        String sql="select * from V_Items where CategoryID="+cateid;
            interact.GUIInteraction.readToTable(sql,tblItems);
        } catch (SQLException ex) {
            Logger.getLogger(frmCustomers.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_cboCategoryItemStateChanged

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        int itemID=tblItems.getSelectedRow();
        if(itemID==-1)
        {
            JOptionPane.showMessageDialog(this,"You must choose a item");
            return;
        }
        else
        {
            int row=tblItems.getSelectedRow();
           code.txtItemID.setText(tblItems.getValueAt(row,0).toString());
           this.dispose();
        }
}//GEN-LAST:event_btnSelectActionPerformed
private void refresh()
{
        try {
            interact.GUIInteraction.readToTable("select * from V_Items", tblItems);
            interact.GUIInteraction.readToCombo("select * from Categories", cboCategory,"CategoryName");
        } catch (SQLException ex) {
            Logger.getLogger(frmSearchItems.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new frmItemBrower().setVisible(true);
    }
    });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSelect;
    private javax.swing.JComboBox cboCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblItems;
    private javax.swing.JTextField txtItemID;
    private javax.swing.JTextField txtItemName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

}
